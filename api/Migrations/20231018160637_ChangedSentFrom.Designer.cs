// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231018160637_ChangedSentFrom")]
    partial class ChangedSentFrom
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FilePackLot", b =>
                {
                    b.Property<int>("ReceivedPacksID")
                        .HasColumnType("int");

                    b.Property<int>("SentToID")
                        .HasColumnType("int");

                    b.HasKey("ReceivedPacksID", "SentToID");

                    b.HasIndex("SentToID");

                    b.ToTable("FilePackLot");
                });

            modelBuilder.Entity("api.Models.FilePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SentFromID")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("SentFromID");

                    b.ToTable("FilePacks");
                });

            modelBuilder.Entity("api.Models.HFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FilePackID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Size")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("FilePackID");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("api.Models.Lot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("FilePackLot", b =>
                {
                    b.HasOne("api.Models.FilePack", null)
                        .WithMany()
                        .HasForeignKey("ReceivedPacksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Lot", null)
                        .WithMany()
                        .HasForeignKey("SentToID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.FilePack", b =>
                {
                    b.HasOne("api.Models.Lot", "SentFrom")
                        .WithMany("SentPacks")
                        .HasForeignKey("SentFromID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SentFrom");
                });

            modelBuilder.Entity("api.Models.HFile", b =>
                {
                    b.HasOne("api.Models.FilePack", null)
                        .WithMany("Files")
                        .HasForeignKey("FilePackID");
                });

            modelBuilder.Entity("api.Models.FilePack", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("api.Models.Lot", b =>
                {
                    b.Navigation("SentPacks");
                });
#pragma warning restore 612, 618
        }
    }
}
